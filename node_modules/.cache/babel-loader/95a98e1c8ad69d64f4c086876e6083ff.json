{"ast":null,"code":"import _classCallCheck from \"/Users/Youssef/Projects/Redux/redux-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Youssef/Projects/Redux/redux-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Youssef/Projects/Redux/redux-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Youssef/Projects/Redux/redux-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Youssef/Projects/Redux/redux-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Youssef/Projects/Redux/redux-app/src/components/Slider.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport Styles from \"./Styles.css\";\nimport Previous from \"./Previous\";\nimport Panel from \"./Panel\";\nimport Next from \"./Next\";\nimport { Data } from '../data/dataPicker.js';\nimport { fetchData } from '../media-store/actions/actions.js';\nimport { nextSlide, previousSlide } from \"../media-store/actions/actions\";\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Slider, _Component);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Slider).call(this, props));\n\n    _this.loadNextImage = function () {\n      _this.setState({\n        indexer: _this.state.indexer + 1\n      });\n\n      _this.loadImage();\n\n      _this.props.dispatch(nextSlide(Data['slide' + _this.state.indexer]));\n    };\n\n    _this.state = {\n      name: 'Slider',\n      next: 'NEXT',\n      previous: 'PREVIOUS',\n      imageUrl: undefined,\n      placeholder: '500 X 500 photo',\n      indexer: 1\n    };\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchData(Data));\n      this.loadImage();\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage() {\n      this.setState({\n        imageUrl: Data['slide' + this.state.indexer]\n      });\n    }\n  }, {\n    key: \"loadPreviousImage\",\n    value: function loadPreviousImage() {\n      this.setState({\n        indexer: this.state.indexer - 1\n      });\n      this.loadImage();\n      this.props.dispatch(previousSlide(Data['slide' + this.state.indexer]));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: Styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: Styles.Slider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Previous, {\n        previous: function previous() {\n          return _this2.loadPreviousImage();\n        },\n        title: this.state.previous,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Panel, {\n        image: this.state.imageUrl,\n        placeholder: this.state.placeholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Next, {\n        next: this.loadNextImage,\n        title: this.state.next,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Slider;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    mediaStatue: state\n  };\n};\n\nexport default connect(mapStateToProps)(Slider);","map":{"version":3,"sources":["/Users/Youssef/Projects/Redux/redux-app/src/components/Slider.js"],"names":["React","Component","connect","Styles","Previous","Panel","Next","Data","fetchData","nextSlide","previousSlide","Slider","props","loadNextImage","setState","indexer","state","loadImage","dispatch","name","next","previous","imageUrl","undefined","placeholder","container","loadPreviousImage","mapStateToProps","mediaStatue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,IAAR,QAAmB,uBAAnB;AACA,SAAQC,SAAR,QAAwB,mCAAxB;AACA,SAAQC,SAAR,EAAmBC,aAAnB,QAAuC,gCAAvC;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;;AADe,UA+BnBC,aA/BmB,GA+BH,YAAM;AAClB,YAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,MAAKC,KAAL,CAAWD,OAAX,GAAqB;AADpB,OAAd;;AAGA,YAAKE,SAAL;;AACA,YAAKL,KAAL,CAAWM,QAAX,CAAoBT,SAAS,CAACF,IAAI,CAAC,UAAU,MAAKS,KAAL,CAAWD,OAAtB,CAAL,CAA7B;AACH,KArCkB;;AAEf,UAAKC,KAAL,GAAa;AACTG,MAAAA,IAAI,EAAE,QADG;AAETC,MAAAA,IAAI,EAAE,MAFG;AAGTC,MAAAA,QAAQ,EAAE,UAHD;AAITC,MAAAA,QAAQ,EAAEC,SAJD;AAKTC,MAAAA,WAAW,EAAE,iBALJ;AAMTT,MAAAA,OAAO,EAAE;AANA,KAAb;AAFe;AAUlB;;;;wCAEmB;AAChB,WAAKH,KAAL,CAAWM,QAAX,CAAoBV,SAAS,CAACD,IAAD,CAA7B;AACA,WAAKU,SAAL;AACH;;;gCAEW;AACR,WAAKH,QAAL,CAAc;AACVQ,QAAAA,QAAQ,EAAEf,IAAI,CAAC,UAAU,KAAKS,KAAL,CAAWD,OAAtB;AADJ,OAAd;AAGH;;;wCAEmB;AAChB,WAAKD,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,GAAqB;AADpB,OAAd;AAGA,WAAKE,SAAL;AACA,WAAKL,KAAL,CAAWM,QAAX,CAAoBR,aAAa,CAACH,IAAI,CAAC,UAAU,KAAKS,KAAL,CAAWD,OAAtB,CAAL,CAAjC;AACH;;;6BAUQ;AAAA;;AAEL,aACI;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACsB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAEtB,MAAM,CAACQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,QAAD;AACI,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACe,iBAAL,EAAN;AAAA,SADd;AAEI,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWK,QAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAOI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,QADtB;AAEI,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWQ,WAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAYI,oBAAC,IAAD;AACI,QAAA,IAAI,EAAE,KAAKX,aADf;AAEI,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWI,IAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADJ,CADJ;AAuBH;;;;EAjEgBnB,S;;AAoErB,IAAM0B,eAAe,GAAG,SAAlBA,eAAkB,CAACX,KAAD,EAAW;AAC/B,SAAO;AACHY,IAAAA,WAAW,EAAEZ;AADV,GAAP;AAGH,CAJD;;AAKA,eAAed,OAAO,CAACyB,eAAD,CAAP,CAAyBhB,MAAzB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport Styles from \"./Styles.css\";\nimport Previous from \"./Previous\";\nimport Panel from \"./Panel\";\nimport Next from \"./Next\";\nimport {Data} from '../data/dataPicker.js';\nimport {fetchData} from '../media-store/actions/actions.js';\nimport {nextSlide, previousSlide} from \"../media-store/actions/actions\";\n\nclass Slider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: 'Slider',\n            next: 'NEXT',\n            previous: 'PREVIOUS',\n            imageUrl: undefined,\n            placeholder: '500 X 500 photo',\n            indexer: 1,\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(fetchData(Data));\n        this.loadImage();\n    };\n\n    loadImage() {\n        this.setState({\n            imageUrl: Data['slide' + this.state.indexer]\n        })\n    };\n\n    loadPreviousImage() {\n        this.setState({\n            indexer: this.state.indexer - 1\n        });\n        this.loadImage();\n        this.props.dispatch(previousSlide(Data['slide' + this.state.indexer]))\n    };\n\n    loadNextImage = () => {\n        this.setState({\n            indexer: this.state.indexer + 1\n        });\n        this.loadImage();\n        this.props.dispatch(nextSlide(Data['slide' + this.state.indexer]))\n    };\n\n    render() {\n\n        return (\n            <div className={Styles.container}>\n                <div className={Styles.Slider}>\n\n                    <Previous\n                        previous={() => this.loadPreviousImage()}\n                        title={this.state.previous}\n                    />\n\n                    <Panel\n                        image={this.state.imageUrl}\n                        placeholder={this.state.placeholder}\n                    />\n\n                    <Next\n                        next={this.loadNextImage}\n                        title={this.state.next}\n                    />\n\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        mediaStatue: state,\n    }\n};\nexport default connect(mapStateToProps)(Slider);"]},"metadata":{},"sourceType":"module"}